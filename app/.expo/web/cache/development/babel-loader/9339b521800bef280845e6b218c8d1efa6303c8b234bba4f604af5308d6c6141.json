{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { Form, Button, Container, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport gql from 'graphql-tag';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GET_SEARCH_QUERY = gql`\n  query getQuestionByTitle($title: String!) {\n    getQuestionByTitle(title: $title) {\n      id\n      title\n      createdAt\n      status\n    }\n  }\n`;\nvar QuestionSearch = function QuestionSearch() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useLazyQuery = useLazyQuery(GET_SEARCH_QUERY),\n    _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n    getQuestionByTitle = _useLazyQuery2[0],\n    _useLazyQuery2$ = _useLazyQuery2[1],\n    loading = _useLazyQuery2$.loading,\n    error = _useLazyQuery2$.error,\n    data = _useLazyQuery2$.data;\n  useEffect(function () {\n    if (title.trim() === '') {\n      getQuestionByTitle({\n        variables: {\n          title: ''\n        }\n      });\n    }\n  }, [title]);\n  var handleSearch = function handleSearch(event) {\n    event.preventDefault();\n    getQuestionByTitle({\n      variables: {\n        title: title.trim()\n      }\n    });\n  };\n  return _jsxs(\"div\", {\n    className: \"mb-3\",\n    children: [_jsxs(Form, {\n      onSubmit: handleSearch,\n      className: \"mx-auto\",\n      children: [_jsx(Form.Group, {\n        controlId: \"searchForm\",\n        className: \"mx-auto\",\n        children: _jsx(\"input\", {\n          type: \"text\",\n          className: \"form-control mx-auto\",\n          placeholder: \"Enter question title\",\n          value: title,\n          onChange: function onChange(e) {\n            return setTitle(e.target.value);\n          },\n          style: {\n            width: '500px',\n            height: '37.6px'\n          }\n        })\n      }), _jsx(\"div\", {\n        className: \"mt-2 mb-2\",\n        children: _jsx(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Search\"\n        })\n      })]\n    }), loading && _jsx(\"p\", {\n      children: \"Loading...\"\n    }), error && _jsxs(\"p\", {\n      children: [\"Error: \", error.message]\n    }), data && data.getQuestionByTitle && data.getQuestionByTitle.length > 0 && _jsx(Container, {\n      children: _jsxs(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [_jsx(\"thead\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"Title\"\n            }), _jsx(\"th\", {\n              children: \"CreatedAt\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: data.getQuestionByTitle.map(function (question) {\n            return _jsxs(\"tr\", {\n              children: [_jsx(\"td\", {\n                children: _jsx(Link, {\n                  to: `/question/${question.id}`,\n                  children: question.title\n                })\n              }), _jsx(\"td\", {\n                children: question.createdAt\n              })]\n            }, question.id);\n          })\n        })]\n      })\n    })]\n  });\n};\nexport { QuestionSearch };","map":{"version":3,"names":["React","useState","useEffect","useLazyQuery","Form","Button","Container","Table","Link","gql","jsx","_jsx","jsxs","_jsxs","GET_SEARCH_QUERY","QuestionSearch","_useState","_useState2","_slicedToArray","title","setTitle","_useLazyQuery","_useLazyQuery2","getQuestionByTitle","_useLazyQuery2$","loading","error","data","trim","variables","handleSearch","event","preventDefault","className","children","onSubmit","Group","controlId","type","placeholder","value","onChange","e","target","style","width","height","variant","message","length","striped","bordered","hover","map","question","to","id","createdAt"],"sources":["C:/Users/ABN AniGame/Documents/GitHub/StudyBarter/app/web/view/QuestionSearch.js"],"sourcesContent":["// QuestionSearch.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLazyQuery,  } from '@apollo/client';\r\nimport { Form, Button, Container, Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport gql from 'graphql-tag';\r\n\r\nconst GET_SEARCH_QUERY = gql`\r\n  query getQuestionByTitle($title: String!) {\r\n    getQuestionByTitle(title: $title) {\r\n      id\r\n      title\r\n      createdAt\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nconst QuestionSearch = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [getQuestionByTitle, { loading, error, data }] = useLazyQuery(GET_SEARCH_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (title.trim() === '') {\r\n      getQuestionByTitle({\r\n        variables: { title: '' },\r\n      });\r\n    }\r\n  }, [title]); // Зависимость теперь от title, чтобы следить за его изменениями\r\n\r\n\r\n  \r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    getQuestionByTitle({\r\n      variables: { title: title.trim() },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <Form onSubmit={handleSearch} className=\"mx-auto\">\r\n        <Form.Group controlId=\"searchForm\" className=\"mx-auto\">\r\n          <input \r\n            type=\"text\"\r\n            className=\"form-control mx-auto\"\r\n            placeholder=\"Enter question title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            style={{ width: '500px', height: '37.6px' }}\r\n          />\r\n        </Form.Group>\r\n        <div className=\"mt-2 mb-2\">\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Search\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>Error: {error.message}</p>}\r\n\r\n      {data && data.getQuestionByTitle && data.getQuestionByTitle.length > 0 && (\r\n        <Container>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>CreatedAt</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.getQuestionByTitle.map((question) => (\r\n                <tr key={question.id}>\r\n                  <td>\r\n                    <Link to={`/question/${question.id}`}>{question.title}</Link>\r\n                  </td>\r\n                  <td>{question.createdAt}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { QuestionSearch };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}