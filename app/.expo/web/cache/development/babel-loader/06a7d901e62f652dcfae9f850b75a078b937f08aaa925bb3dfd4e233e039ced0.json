{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Header from \"./Header\";\nimport { Container, Table, Form, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { Link, useNavigate } from 'react-router-dom';\nimport \"./styles/Home.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CREATE_QUESTION_MUTATION = gql`\n  mutation createQuestion($title: String!){\n    createQuestion(title: $title) {\n      id\n      createdAt\n      title\n      status\n\n      user {\n        id\n        name\n      }\n    \n    }\n  }\n`;\nfunction NewQuestion() {\n  var navigate = useNavigate();\n  var _useMutation = useMutation(CREATE_QUESTION_MUTATION),\n    _useMutation2 = _slicedToArray(_useMutation, 1),\n    createQuestion = _useMutation2[0];\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    newQuestionTitle = _useState2[0],\n    setNewQuestionTitle = _useState2[1];\n  var handleCreateQuestion = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield createQuestion({\n          variables: {\n            title: newQuestionTitle\n          }\n        });\n        setNewQuestionTitle('');\n        navigate('/');\n      } catch (error) {\n        console.error('Error creating question:', error.message);\n      }\n    });\n    return function handleCreateQuestion() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(\"div\", {\n    children: [_jsx(Header, {}), _jsx(Container, {\n      className: \"d-flex justify-content-center\",\n      children: _jsxs(Form, {\n        children: [_jsx(Form.Group, {\n          children: _jsx(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter question title\",\n            value: newQuestionTitle,\n            onChange: function onChange(e) {\n              return setNewQuestionTitle(e.target.value);\n            }\n          })\n        }), _jsx(Button, {\n          onClick: handleCreateQuestion,\n          variant: \"primary\",\n          children: \"Create Question\"\n        })]\n      })\n    })]\n  });\n}\n;\nexport { NewQuestion };","map":{"version":3,"names":["React","useState","Header","Container","Table","Form","Button","useQuery","useMutation","gql","Link","useNavigate","jsx","_jsx","jsxs","_jsxs","CREATE_QUESTION_MUTATION","NewQuestion","navigate","_useMutation","_useMutation2","_slicedToArray","createQuestion","_useState","_useState2","newQuestionTitle","setNewQuestionTitle","handleCreateQuestion","_ref","_asyncToGenerator","variables","title","error","console","message","apply","arguments","children","className","Group","Control","type","placeholder","value","onChange","e","target","onClick","variant"],"sources":["C:/Users/ABN AniGame/Documents/GitHub/StudyBarter/app/web/view/newQuestion.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport { Container, Table, Form, Button } from 'react-bootstrap';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './styles/Home.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst CREATE_QUESTION_MUTATION = gql`\r\n  mutation createQuestion($title: String!){\r\n    createQuestion(title: $title) {\r\n      id\r\n      createdAt\r\n      title\r\n      status\r\n\r\n      user {\r\n        id\r\n        name\r\n      }\r\n    \r\n    }\r\n  }\r\n`;\r\n\r\nfunction NewQuestion() {\r\n    const navigate  = useNavigate();\r\n\r\n    const [createQuestion] = useMutation(CREATE_QUESTION_MUTATION);\r\n\r\n    const [newQuestionTitle, setNewQuestionTitle] = useState('');\r\n\r\n    const handleCreateQuestion = async () => {\r\n        try {\r\n        // Call the createQuestion mutation\r\n        await createQuestion({\r\n            variables: { title: newQuestionTitle },\r\n            // refetchQueries: [{ query: GET_QUESTION_QUERY }],\r\n            \r\n        });\r\n        // Clear the input field after successful creation\r\n        setNewQuestionTitle('');\r\n        navigate('/')\r\n        } catch (error) {\r\n        console.error('Error creating question:', error.message);\r\n        } \r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Container className=\"d-flex justify-content-center\">\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter question title\"\r\n                value={newQuestionTitle}\r\n                onChange={(e) => setNewQuestionTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button onClick={handleCreateQuestion} variant=\"primary\">\r\n              Create Question\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );    \r\n\r\n};\r\n\r\nexport { NewQuestion };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM;AACb,SAASC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAChE,SAASC,QAAQ,EAAEC,WAAW,QAAQ,gBAAgB;AACtD,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD;AACA,OAAO,sCAAsC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9C,IAAMC,wBAAwB,GAAGP,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASQ,WAAWA,CAAA,EAAG;EACnB,IAAMC,QAAQ,GAAIP,WAAW,CAAC,CAAC;EAE/B,IAAAQ,YAAA,GAAyBX,WAAW,CAACQ,wBAAwB,CAAC;IAAAI,aAAA,GAAAC,cAAA,CAAAF,YAAA;IAAvDG,cAAc,GAAAF,aAAA;EAErB,IAAAG,SAAA,GAAgDtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAH,cAAA,CAAAE,SAAA;IAArDE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAE5C,IAAMG,oBAAoB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACrC,IAAI;QAEJ,MAAMP,cAAc,CAAC;UACjBQ,SAAS,EAAE;YAAEC,KAAK,EAAEN;UAAiB;QAGzC,CAAC,CAAC;QAEFC,mBAAmB,CAAC,EAAE,CAAC;QACvBR,QAAQ,CAAC,GAAG,CAAC;MACb,CAAC,CAAC,OAAOc,KAAK,EAAE;QAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxD;IACJ,CAAC;IAAA,gBAdKP,oBAAoBA,CAAA;MAAA,OAAAC,IAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAczB;EAED,OACErB,KAAA;IAAAsB,QAAA,GACExB,IAAA,CAACX,MAAM,IAAE,CAAC,EACVW,IAAA,CAACV,SAAS;MAACmC,SAAS,EAAC,+BAA+B;MAAAD,QAAA,EAClDtB,KAAA,CAACV,IAAI;QAAAgC,QAAA,GACHxB,IAAA,CAACR,IAAI,CAACkC,KAAK;UAAAF,QAAA,EACTxB,IAAA,CAACR,IAAI,CAACmC,OAAO;YACXC,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,sBAAsB;YAClCC,KAAK,EAAElB,gBAAiB;YACxBmB,QAAQ,EAAE,SAAAA,SAACC,CAAC;cAAA,OAAKnB,mBAAmB,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;YAAA;UAAC,CACtD;QAAC,CACQ,CAAC,EACb9B,IAAA,CAACP,MAAM;UAACyC,OAAO,EAAEpB,oBAAqB;UAACqB,OAAO,EAAC,SAAS;UAAAX,QAAA,EAAC;QAEzD,CAAQ,CAAC;MAAA,CACL;IAAC,CACE,CAAC;EAAA,CACT,CAAC;AAGZ;AAAC;AAED,SAASpB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}