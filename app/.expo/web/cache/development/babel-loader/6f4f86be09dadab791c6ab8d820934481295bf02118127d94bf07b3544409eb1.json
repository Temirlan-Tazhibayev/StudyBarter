{"ast":null,"code":"import React, { useState } from 'react';\nimport Header from \"./Header.js\";\nimport { Container, Row, Col, Button, Card, Table } from 'react-bootstrap';\nimport { useQuery, useMutation, useLazyQuery, useReadQuery } from '@apollo/client';\nimport { Link, useNavigate } from 'react-router-dom';\nimport \"./styles/Home.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { GET_QUESTION_QUERY, GET_MY_PROFILE_QUERY, GET_MY_QUESTIONS_QUERY, GET_QUESTION_STATUS_QUERY } from \"./gql/operation.js\";\nimport { Recommendation } from \"./recommendation.js\";\nimport \"./styles/profile.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ProfileData() {\n  var _useQuery = useQuery(GET_MY_PROFILE_QUERY),\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  if (loading) return _jsx(\"p\", {\n    children: \"Loading\"\n  });\n  if (error) return _jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  var profile_data = data.myProfile;\n  return profile_data;\n}\nfunction StatusChanged() {\n  var _useQuery2 = useQuery(GET_QUESTION_STATUS_QUERY),\n    loading = _useQuery2.loading,\n    error = _useQuery2.error,\n    data = _useQuery2.data;\n  if (loading) return _jsx(\"p\", {\n    children: \"Loading\"\n  });\n  if (error) return _jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  var profile_data = data.questionStatusChanged;\n  return profile_data;\n}\nfunction MyQuestion() {\n  var _useQuery3 = useQuery(GET_MY_QUESTIONS_QUERY),\n    loading = _useQuery3.loading,\n    error = _useQuery3.error,\n    data = _useQuery3.data;\n  if (loading) return _jsx(\"p\", {\n    children: \"Loading\"\n  });\n  if (error) return _jsxs(\"p\", {\n    children: [\"Error: \", error.message]\n  });\n  var questionData = data.myQuestions;\n  return questionData;\n}\nfunction Profile() {\n  var profileData = ProfileData();\n  var myQuestion = MyQuestion();\n  var statusChanged = StatusChanged();\n  var navigate = useNavigate();\n  var isAuthenticated = function isAuthenticated() {\n    var token = localStorage.getItem('token');\n    return !!token;\n  };\n  var _useQuery4 = useQuery(GET_QUESTION_QUERY),\n    questionLoading = _useQuery4.loading,\n    questionError = _useQuery4.error,\n    questionData = _useQuery4.data;\n  if (questionLoading) return _jsx(\"p\", {\n    children: \"Loading...\"\n  });\n  if (questionError) return _jsxs(\"p\", {\n    children: [\"Error: \", questionError.message]\n  });\n  var questions = questionData.getQuestionList;\n  var handleCreateQuestion = function handleCreateQuestion() {\n    navigate('/newquestion');\n  };\n  return _jsxs(\"div\", {\n    className: \"main-page\",\n    children: [_jsx(Header, {}), _jsx(Container, {\n      fluid: true,\n      children: _jsxs(Row, {\n        children: [_jsx(Col, {\n          xs: 6,\n          children: _jsxs(Card, {\n            children: [_jsx(Card.Header, {\n              children: _jsx(\"h2\", {\n                children: \"User Profile\"\n              })\n            }), _jsxs(Card.Body, {\n              children: [_jsxs(\"p\", {\n                children: [_jsx(\"strong\", {\n                  children: \"Name:\"\n                }), \" \", profileData.name]\n              }), _jsxs(\"p\", {\n                children: [_jsx(\"strong\", {\n                  children: \"Email:\"\n                }), \" \", profileData.email, \" \"]\n              })]\n            })]\n          })\n        }), _jsx(Col, {\n          xs: 6,\n          children: _jsx(Recommendation, {})\n        }), _jsx(Col, {\n          xs: 12,\n          children: _jsxs(Card, {\n            children: [_jsxs(Card.Header, {\n              children: [_jsx(\"h2\", {\n                children: \"My Questions\"\n              }), _jsx(Button, {\n                onClick: handleCreateQuestion,\n                variant: \"primary\",\n                children: \"Create Question\"\n              })]\n            }), _jsx(Card.Body, {\n              children: _jsxs(Table, {\n                striped: true,\n                bordered: true,\n                hover: true,\n                children: [_jsx(\"thead\", {\n                  children: _jsxs(\"tr\", {\n                    children: [_jsx(\"th\", {\n                      children: \"Title\"\n                    }), _jsx(\"th\", {\n                      children: \"CreatedAt\"\n                    }), _jsx(\"th\", {\n                      children: \"Status\"\n                    }), _jsx(\"th\", {\n                      children: \"Notifications\"\n                    })]\n                  })\n                }), _jsx(\"tbody\", {\n                  children: myQuestion.map(function (question) {\n                    return _jsxs(\"tr\", {\n                      children: [_jsx(\"td\", {\n                        children: _jsx(Link, {\n                          to: `/question/${question.id}`,\n                          children: question.title\n                        })\n                      }), _jsx(\"td\", {\n                        children: question.createdAt\n                      }), _jsx(\"td\", {\n                        children: question.status ? \"Question Closed\" : \"Question Stil Open\"\n                      }), _jsx(\"td\", {\n                        children: Array.isArray(statusChanged) && statusChanged.length > 0 && (statusChanged.some(function (updatedQuestion) {\n                          return updatedQuestion.id === question.id;\n                        }) ? \" - Обновлено\" : \" - Не обновлено\")\n                      })]\n                    }, question.id);\n                  })\n                })]\n              })\n            })]\n          })\n        })]\n      })\n    })]\n  });\n}\nexport { Profile };","map":{"version":3,"names":["React","useState","Header","Container","Row","Col","Button","Card","Table","useQuery","useMutation","useLazyQuery","useReadQuery","Link","useNavigate","GET_QUESTION_QUERY","GET_MY_PROFILE_QUERY","GET_MY_QUESTIONS_QUERY","GET_QUESTION_STATUS_QUERY","Recommendation","jsx","_jsx","jsxs","_jsxs","ProfileData","_useQuery","loading","error","data","children","message","profile_data","myProfile","StatusChanged","_useQuery2","questionStatusChanged","MyQuestion","_useQuery3","questionData","myQuestions","Profile","profileData","myQuestion","statusChanged","navigate","isAuthenticated","token","localStorage","getItem","_useQuery4","questionLoading","questionError","questions","getQuestionList","handleCreateQuestion","className","fluid","xs","Body","name","email","onClick","variant","striped","bordered","hover","map","question","to","id","title","createdAt","status","Array","isArray","length","some","updatedQuestion"],"sources":["C:/Users/ABN AniGame/Documents/GitHub/StudyBarter/app/web/view/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from './Header.js';\r\nimport { Container, Row, Col, Button, Card, Table } from 'react-bootstrap';\r\nimport { useQuery, useMutation, useLazyQuery, useReadQuery } from '@apollo/client';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './styles/Home.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { GET_QUESTION_QUERY, GET_MY_PROFILE_QUERY, GET_MY_QUESTIONS_QUERY, GET_QUESTION_STATUS_QUERY } from './gql/operation.js';\r\nimport { Recommendation } from './recommendation.js';\r\nimport \"./styles/profile.css\"\r\n\r\n\r\n\r\n\r\nfunction ProfileData() {\r\n    const { loading, error, data } = useQuery(GET_MY_PROFILE_QUERY);\r\n    if (loading) return <p>Loading</p>\r\n    if (error) return <p>Error: {error.message}</p>\r\n\r\n    const profile_data = data.myProfile;\r\n    return profile_data;\r\n}\r\n\r\nfunction StatusChanged() {\r\n    const { loading, error, data } = useQuery(GET_QUESTION_STATUS_QUERY)\r\n\r\n    if (loading) return <p>Loading</p>\r\n    if (error) return <p>Error: {error.message}</p>\r\n\r\n    const profile_data = data.questionStatusChanged;\r\n    // console.log(profile_data)\r\n    return profile_data;\r\n\r\n}\r\nfunction MyQuestion() {\r\n    const { loading, error, data } = useQuery(GET_MY_QUESTIONS_QUERY);\r\n    if (loading) return <p>Loading</p>\r\n    if (error) return <p>Error: {error.message}</p>\r\n\r\n    const questionData = data.myQuestions;\r\n    return questionData;\r\n\r\n}\r\n\r\nfunction Profile() {\r\n    const profileData = ProfileData();\r\n\r\n    const myQuestion = MyQuestion();\r\n\r\n    const statusChanged = StatusChanged();\r\n    \r\n    // console.log(statusChanged.map())\r\n    const navigate = useNavigate();\r\n    const isAuthenticated = () => {\r\n        const token = localStorage.getItem('token');\r\n        return !!token;\r\n    }\r\n\r\n    const { loading: questionLoading, error: questionError, data: questionData } = useQuery(GET_QUESTION_QUERY);\r\n\r\n    if (questionLoading) return <p>Loading...</p>;\r\n    if (questionError) return <p>Error: {questionError.message}</p>;\r\n  \r\n    const questions = questionData.getQuestionList;\r\n  \r\n    const handleCreateQuestion = () => {\r\n      // Redirect to the \"createnewquestion\" page\r\n      navigate('/newquestion');\r\n    };\r\n\r\n\r\n    return (\r\n      <div className='main-page'>\r\n        <Header />\r\n        <Container fluid>\r\n            <Row>\r\n                <Col xs={6}>\r\n                {/* Содержимое для первого элемента (25%) */}\r\n                <Card>\r\n                    <Card.Header>\r\n                        <h2>User Profile</h2>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <p><strong>Name:</strong> { profileData.name }</p>\r\n                        <p><strong>Email:</strong> { profileData.email } </p>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n                \r\n                <Col xs={6}>\r\n                {/* Содержимое для второго элемента (25%) */}\r\n                <Recommendation/>\r\n                </Col>\r\n\r\n                <Col xs={12}>\r\n                {/* Содержимое для третьего элемента (50%) */}\r\n                \r\n                <Card>\r\n                    <Card.Header>\r\n                        <h2>My Questions</h2>\r\n                        <Button onClick={handleCreateQuestion} variant=\"primary\">\r\n                            Create Question\r\n                        </Button>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>CreatedAt</th>\r\n                            <th>Status</th>\r\n                            <th>Notifications</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {myQuestion.map((question) => (\r\n                            \r\n                        <tr key={question.id}>\r\n                            <td>\r\n                            <Link to={`/question/${question.id}`}>{question.title}</Link>\r\n                            </td>\r\n                            <td>{question.createdAt}</td>\r\n                            <td>{question.status ? (\"Question Closed\"): (\"Question Stil Open\")}</td>\r\n                            <td>\r\n                                {\r\n                                Array.isArray(statusChanged) && statusChanged.length > 0 && (\r\n                                    statusChanged.some(updatedQuestion => updatedQuestion.id === question.id) ? \" - Обновлено\" : \" - Не обновлено\"\r\n                                )\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport { Profile };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}