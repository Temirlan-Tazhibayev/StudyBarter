{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { Form, Button, Container, Table } from 'react-bootstrap';\nimport { GET_QUESTION_QUERY } from \"./gql/operation.js\";\nimport { Link } from 'react-router-dom';\nimport gql from 'graphql-tag';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GET_SEARCH_QUERY = gql`\n  query getQuestionByTitle($title: String!, $limit: ID, $offset: ID) {\n    getQuestionByTitle(title: $title, limit: $limit, offset: $offset) {\n      id\n      title\n      createdAt\n      status\n    }\n  }\n`;\nvar QuestionSearch = function QuestionSearch() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentPage = _useState4[0],\n    setCurrentPage = _useState4[1];\n  var limit = 10;\n  var _useLazyQuery = useLazyQuery(GET_SEARCH_QUERY),\n    _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n    getQuestionByTitle = _useLazyQuery2[0],\n    _useLazyQuery2$ = _useLazyQuery2[1],\n    loading = _useLazyQuery2$.loading,\n    error = _useLazyQuery2$.error,\n    data = _useLazyQuery2$.data;\n  var _useQuery = useQuery(GET_QUESTION_QUERY),\n    questionLoading = _useQuery.loading,\n    questionError = _useQuery.error,\n    questionData = _useQuery.data;\n  useEffect(function () {\n    if (title.trim() === '') {\n      getQuestionByTitle({\n        variables: {\n          title: '',\n          limit: limit,\n          offset: (currentPage - 1) * limit\n        }\n      });\n    }\n  }, [title, currentPage]);\n  var handleSearch = function handleSearch(event) {\n    event.preventDefault();\n    setCurrentPage(1);\n    getQuestionByTitle({\n      variables: {\n        title: title.trim(),\n        limit: limit,\n        offset: 0\n      }\n    });\n  };\n  return _jsxs(\"div\", {\n    className: \"mb-3\",\n    children: [_jsxs(Form, {\n      onSubmit: handleSearch,\n      className: \"mx-auto\",\n      children: [_jsx(Form.Group, {\n        controlId: \"searchForm\",\n        className: \"mx-auto\",\n        children: _jsx(\"input\", {\n          type: \"text\",\n          className: \"form-control mx-auto\",\n          placeholder: \"Enter question title\",\n          value: title,\n          onChange: function onChange(e) {\n            return setTitle(e.target.value);\n          },\n          style: {\n            width: '500px',\n            height: '37.6px'\n          }\n        })\n      }), _jsx(\"div\", {\n        className: \"mt-2 mb-2\",\n        children: _jsx(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Search\"\n        })\n      })]\n    }), loading && _jsx(\"p\", {\n      children: \"Loading...\"\n    }), error && _jsxs(\"p\", {\n      children: [\"Error: \", error.message]\n    }), data && data.getQuestionByTitle && data.getQuestionByTitle.length > 0 && _jsx(Container, {\n      children: _jsxs(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [_jsx(\"thead\", {\n          children: _jsxs(\"tr\", {\n            children: [_jsx(\"th\", {\n              children: \"Title\"\n            }), _jsx(\"th\", {\n              children: \"CreatedAt\"\n            })]\n          })\n        }), _jsx(\"tbody\", {\n          children: data.getQuestionByTitle.map(function (question) {\n            return _jsxs(\"tr\", {\n              children: [_jsx(\"td\", {\n                children: _jsx(Link, {\n                  to: `/question/${question.id}`,\n                  children: question.title\n                })\n              }), _jsx(\"td\", {\n                children: question.createdAt\n              })]\n            }, question.id);\n          })\n        })]\n      })\n    }), data && data.getQuestionByTitle && data.getQuestionByTitle.length > 0 && _jsxs(\"div\", {\n      class: \"container\",\n      children: [_jsx(\"button\", {\n        onClick: function onClick() {\n          return setCurrentPage(function (prevPage) {\n            return Math.max(prevPage - 1, 1);\n          });\n        },\n        disabled: currentPage === 1,\n        children: \"Previous Page\"\n      }), _jsxs(\"span\", {\n        children: [\" Page \", currentPage, \" \"]\n      }), _jsx(\"button\", {\n        onClick: function onClick() {\n          return setCurrentPage(function (prevPage) {\n            return prevPage + 1;\n          });\n        },\n        disabled: currentPage >= Math.ceil(questionData.getQuestionList.length / limit),\n        children: \"Next Page\"\n      })]\n    })]\n  });\n};\nexport { QuestionSearch };","map":{"version":3,"names":["React","useState","useEffect","useLazyQuery","useQuery","Form","Button","Container","Table","GET_QUESTION_QUERY","Link","gql","jsx","_jsx","jsxs","_jsxs","GET_SEARCH_QUERY","QuestionSearch","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","currentPage","setCurrentPage","limit","_useLazyQuery","_useLazyQuery2","getQuestionByTitle","_useLazyQuery2$","loading","error","data","_useQuery","questionLoading","questionError","questionData","trim","variables","offset","handleSearch","event","preventDefault","className","children","onSubmit","Group","controlId","type","placeholder","value","onChange","e","target","style","width","height","variant","message","length","striped","bordered","hover","map","question","to","id","createdAt","class","onClick","prevPage","Math","max","disabled","ceil","getQuestionList"],"sources":["C:/Users/ABN AniGame/Documents/GitHub/StudyBarter/app/web/view/QuestionSearch.js"],"sourcesContent":["// QuestionSearch.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLazyQuery, useQuery } from '@apollo/client';\r\nimport { Form, Button, Container, Table } from 'react-bootstrap';\r\nimport { GET_QUESTION_QUERY } from './gql/operation.js';\r\nimport { Link } from 'react-router-dom';\r\nimport gql from 'graphql-tag';\r\n\r\n\r\nconst GET_SEARCH_QUERY = gql`\r\n  query getQuestionByTitle($title: String!, $limit: ID, $offset: ID) {\r\n    getQuestionByTitle(title: $title, limit: $limit, offset: $offset) {\r\n      id\r\n      title\r\n      createdAt\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nconst QuestionSearch = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const limit = 10;\r\n  const [getQuestionByTitle, { loading, error, data }] = useLazyQuery(GET_SEARCH_QUERY);\r\n  const { loading: questionLoading, error: questionError, data: questionData } = useQuery(GET_QUESTION_QUERY);\r\n\r\n  useEffect(() => {\r\n    if (title.trim() === '') {\r\n      getQuestionByTitle({\r\n        variables: { title: '', limit, offset: (currentPage - 1) * limit },\r\n      });\r\n    }\r\n  }, [title, currentPage]);\r\n\r\n  \r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    setCurrentPage(1);\r\n    getQuestionByTitle({\r\n      variables: { title: title.trim(), limit, offset: 0 },\r\n    });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <Form onSubmit={handleSearch} className=\"mx-auto\">\r\n        <Form.Group controlId=\"searchForm\" className=\"mx-auto\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control mx-auto\"\r\n            placeholder=\"Enter question title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            style={{ width: '500px', height: '37.6px' }}\r\n          />\r\n        </Form.Group>\r\n        <div className=\"mt-2 mb-2\">\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Search\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p>Error: {error.message}</p>}\r\n\r\n      {data && data.getQuestionByTitle && data.getQuestionByTitle.length > 0 && (\r\n        <Container>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>CreatedAt</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.getQuestionByTitle.map((question) => (\r\n                <tr key={question.id}>\r\n                  <td>\r\n                    <Link to={`/question/${question.id}`}>{question.title}</Link>\r\n                  </td>\r\n                  <td>{question.createdAt}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      )}\r\n\r\n      {data && data.getQuestionByTitle && data.getQuestionByTitle.length > 0 && (\r\n        <div class=\"container\">\r\n          <button\r\n            onClick={() => setCurrentPage((prevPage) => Math.max(prevPage - 1, 1))}\r\n            disabled={currentPage === 1}\r\n          >\r\n            Previous Page\r\n          </button>\r\n          <span> Page {currentPage} </span>\r\n          <button\r\n            onClick={() => setCurrentPage((prevPage) => prevPage + 1)}\r\n            disabled={currentPage >= Math.ceil(questionData.getQuestionList.length/limit)}\r\n          >\r\n            Next Page\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { QuestionSearch };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}